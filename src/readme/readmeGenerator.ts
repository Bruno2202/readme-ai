import path from "path";
import { ai } from "../config/gemini";
import { File } from "../types/File";
import fs from "fs";
import { fileURLToPath } from "url";

export async function generateReadme(abstracts: File[]) {

    const abstractsAnalysis = abstracts
        .map(({ name, content }) => `Arquivo: ${name}\nResumo: ${content}\n`)
        .join("\n");

    console.log(`\nüí° Analisando resumos dos arquivos\n`);

    try {
        const response = await ai.models.generateContent({
            model: "gemini-2.5-flash",
            contents: `
                Voc√™ √© um assistente de documenta√ß√£o de software.

                Baseado nas informa√ß√µes e an√°lises que voc√™ tem sobre o projeto, escreva um README.md completo e bem estruturado, com as seguintes se√ß√µes:

                1. # Nome do Projeto (com emoji)
                2. Descri√ß√£o geral ‚Äî para que serve, p√∫blico-alvo, objetivo
                3. Tecnologias usadas ‚Äî linguagens, frameworks, bibliotecas importantes
                4. Como instalar e rodar ‚Äî passos para configurar localmente
                5. Estrutura do projeto ‚Äî pastas e arquivos mais importantes resumidamente
                6. Como contribuir ‚Äî orienta√ß√µes para colaboradores
                7. Licen√ßa ‚Äî informe a licen√ßa utilizada, se houver
                8. Nota final ‚Äî informe que o README foi gerado automaticamente pelo README.ai

                Use uma linguagem clara, profissional e objetiva. Evite detalhes t√©cnicos muito espec√≠ficos. Foque em facilitar o entendimento do projeto para novos desenvolvedores. Caso as informa√ß√µes n√£o estejam expl√≠citas, use infer√™ncia com base na an√°lise dos arquivos.

                **IMPORTANTE**:  
                Sua resposta **deve conter apenas o conte√∫do do arquivo README.md**, em **formato Markdown v√°lido**. **N√£o adicione nenhuma explica√ß√£o ou frase adicional fora do markdown.**

                ---

                Aqui est√£o as an√°lises dos arquivos do projeto:

                ${abstractsAnalysis}
            `,
        });

        const readme = response.candidates?.[0]?.content?.parts?.[0]?.text;

        if (!readme) {
            console.warn(`\n‚ö†Ô∏è README.md gerado sem conte√∫do\n`)

            return;
        }

        const outputDir = path.resolve(process.cwd(), 'output');

        if (!fs.existsSync(outputDir)) {
            fs.mkdirSync(outputDir);
        }

        const outputPath = path.join(outputDir, 'README.md');
        fs.writeFileSync(outputPath, readme, 'utf8');

        console.log("üèÅ README.md gerado com sucesso!\n");
    } catch (err) {
        console.error(`‚ùå Erro ao gerar README.md: ${err}\n`);
    }
}